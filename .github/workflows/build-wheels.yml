name: Build wheels and upload to PyPI

on:
  workflow_dispatch:
  # pull_request:
  # push:
  #   branches:
  #     - main
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
        
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Fortran
        uses: fortran-lang/setup-fortran@v1
        with:
          version: 13 # 14 not supported yet in Windows

      # This can't be placed in the cibuildwheel action
      # Without it, the wheel repair fails
      - name: MacOS - Set deployment target
        if: runner.os == 'macOS'
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion | cut -d '.' -f 1-2)" >> $GITHUB_ENV

      - name: Windows - set PKG_CONFIG_PATH
        if: ${{ runner.os == 'Windows' }}
        run: |
          $env:CIBW = "${{ github.workspace }}"
          # It seems somewhere in the env passing, `\` is not
          # passed through, so convert it to '/'
          $env:CIBW=$env:CIBW.replace("\","/")
          echo "CIBW_ENVIRONMENT=PKG_CONFIG_PATH=$env:CIBW" >> $env:GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0

      - name: Upload wheels 
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build sdist
        run: pipx run build --sdist

      - name: Upload wheels 
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
    permissions:
      id-token: write
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'publish-pypi') }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
          
      - uses: pypa/gh-action-pypi-publish@release/v1

  upload_test_pypi:
    name: Publish to TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/odrpack
    permissions:
      id-token: write
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'publish-testpypi') }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
